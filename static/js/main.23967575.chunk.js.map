{"version":3,"sources":["components/AppHeader/AppHeader.js","components/SearchPanel/SearchPanel.js","components/ItemStatusFilter/ItemStatusFilter.js","components/TodoListItem/TodoListItem.js","components/TodoList/TodoList.js","components/ItemAddForm/ItemAddForm.js","components/App/App.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","onLabelChange","event","preventDefault","props","onFind","target","value","type","onChange","this","placeholder","Component","ItemStatusFilter","buttons","name","label","onClick","filter","map","classNames","role","TodoListItem","onDeleted","onToggleDone","onToggleImportant","important","style","color","fontWeight","TodoList","todos","elements","item","id","itemProps","ItemAddForm","state","setState","onSubmit","onAddItem","App","maxId","todoData","createTodoItem","filteredData","filterValue","addItem","text","newItem","toggleProps","sort","a","b","deleteItem","index","findIndex","el","slice","items","console","log","filterItems","array","findItem","toLowerCase","includes","updateFilteredData","prevProps","arr","propName","oldItem","doneCount","length","todoCount","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.23967575.chunk.js","sourcesContent":["import React from \"react\";\nimport './AppHeader.css'\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"AppHeader d-flex\" >\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n    );\n};\n\n\nexport default AppHeader;","import React, {Component} from 'react';\n\nexport default class SearchPanel extends Component {\n\n\n    onLabelChange = (event) => {\n        event.preventDefault();\n        this.props.onFind(event.target.value);\n    };\n\n    render() {\n        return (\n            <input type=\"text\"\n                   className=\"form-control search-input\"\n                   onChange={this.onLabelChange}\n                   placeholder=\"type to search\"/>\n        )\n    }\n\n\n}\n\n","import React, {Component} from \"react\";\n\nimport './ItemStatusFilter.css'\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'All', label: 'all'},\n        {name: 'Active', label: 'active'},\n        {name: 'Done', label: 'done'}\n    ]\n\n    render() {\n        const {onClick, filter} = this.props;\n\n        let buttons = this.buttons.map(({name, label}) => {\n            const classNames = filter === label ? \"btn-info\" : \"btn-outline-secondary\"\n            return (\n                <button type=\"button\"\n                        className={`btn ${classNames}`}\n                        key={name}\n                        onClick={() => onClick(label)}>\n                    {name}\n                </button>\n            );\n        })\n        return (\n            <div className=\"btn-group\" role=\"group\">\n                {buttons}\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from 'react';\n\nimport './TodoListItem.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const {\n            label, onDeleted,\n            onToggleDone, onToggleImportant,\n            important, done\n        } = this.props;\n\n        const style = {\n            color: important ? 'steelblue' : 'black',\n            fontWeight: important ? 'bold' : 'normal'\n        };\n\n        let classNames = 'TodoListItem'\n\n        if (done) {\n            classNames += ' done'\n        }\n        if (important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames}>\n                <span className=\"TodoListItemLabel\"\n                      style={style}\n                      onClick={onToggleDone}>\n                    {label}\n                </span>\n                <button type=\"button\"\n                        className=\"btn btn-outline-danger btn-sm float-right\"\n                        onClick={onDeleted}>\n                <i className=\"fa fa-trash-o\"/>\n              </button>\n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-right\"\n                        onClick={onToggleDone}>\n                  <i className=\"fa fa-check\"/>\n              </button>\n              <button type=\"button\"\n                      className=\"btn btn-sm btn-outline-warning float-right\"\n                      onClick={onToggleImportant}>\n                  <i className=\"fa fa-exclamation\"/>\n              </button>\n            </span>\n        );\n    }\n};\n","import React from 'react'\nimport TodoListItem from '../TodoListItem/TodoListItem'\nimport './TodoList.css'\n\nconst TodoList = ({\n                      todos,\n                      onDeleted,\n                      onToggleDone,\n                      onToggleImportant\n                  }) => {\n    const elements = todos.map((item) => {\n        const {id, ...itemProps} = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    {...itemProps}\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        );\n    });\n    return (\n        <ul className=\"list-group TodoList\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;","import React, {Component} from 'react';\nimport './ItemAddForm.css'\n\nexport default class ItemAddForm extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (event) => {\n        this.setState({\n            label: event.target.value\n        })\n    }\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.onAddItem(this.state.label);\n        this.setState({\n            label: ''\n        });\n    };\n\n    render() {\n        return (\n            <form className=\"ItemAddForm d-flex\"\n                onSubmit={this.onSubmit}>\n                <input type=\"text\"\n                       className=\"form-control search-input\"\n                       placeholder=\"type to add\"\n                       onChange={this.onLabelChange}\n                       value={this.state.label}/>\n                <button\n                    className=\"btn btn-outline-secondary\">\n                    Add item\n                </button>\n            </form>\n        )\n    }\n};","import AppHeader from \"../AppHeader/AppHeader\";\nimport SearchPannel from \"../SearchPanel/SearchPanel\";\nimport ItemStatusFilter from \"../ItemStatusFilter/ItemStatusFilter\";\nimport TodoList from \"../TodoList/TodoList\";\nimport './App.css'\nimport {Component} from \"react\";\nimport ItemAddForm from \"../ItemAddForm/ItemAddForm\";\n\nexport default class App extends Component {\n\n    maxId = 100;\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch'),\n            this.createTodoItem('Visit the fridge')\n        ],\n        filteredData: [],\n        filterValue: 'all'\n    }\n\n\n    updateFilteredData() {\n        this.setState(({filterValue}) => {\n            const filteredArray = this.filter(filterValue)\n            return {\n                filteredData: filteredArray\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.updateFilteredData()\n    }\n\n    componentDidUpdate(prevProps, state) {\n        if (state.todoData !== this.state.todoData) {\n            console.log(\"Call component did update\")\n            this.updateFilteredData()\n        }\n    }\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n        this.setState(({todoData}) => {\n            const newArray = [\n                ...todoData,\n                newItem\n            ];\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProps(todoData, id, 'important')\n                    .sort((a, b) => b.important - a.important)\n            }\n        });\n    }\n\n    toggleProps(arr, id, propName) {\n        const index = arr.findIndex((el) => el.id === id);\n        const oldItem = arr[index];\n        const newItem = {...oldItem, [propName]: !oldItem[propName]};\n        return [\n            ...arr.slice(0, index),\n            newItem,\n            ...arr.slice(index + 1)\n        ];\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({todoData}) => {\n            return {\n                todoData: this.toggleProps(todoData, id, 'done')\n                    .sort((a, b) => a.done - b.done)\n            }\n        });\n    }\n\n    deleteItem = (id) => {\n        this.setState(({todoData}) => {\n            const index = todoData.findIndex((el) => el.id === id);\n            const newArray = [\n                ...todoData.slice(0, index),\n                ...todoData.slice(index + 1)\n            ];\n\n            return {\n                todoData: newArray\n            }\n        })\n    };\n\n    createTodoItem(label) {\n        console.log(\"Create item\")\n        return {\n            label,\n            important: false,\n            id: this.maxId++,\n            done: false\n        }\n    }\n\n    filter = (items) => {\n        const {todoData} = this.state;\n        switch (items) {\n            case 'all':\n                console.log('Filter by', items)\n                return todoData;\n            case 'active':\n                console.log('Filter by', items)\n                return todoData.filter(el => !el.done)\n            case 'done':\n                console.log('Filter by', items)\n                return todoData.filter(el => el.done)\n            default:\n                return todoData;\n        }\n    }\n\n    filterItems = (items) => {\n        console.log(\"Start filtering array\", items)\n        const array = this.filter(items);\n        if (array !== this.state.filteredData) {\n            this.setState(() => {\n                return {\n                    filteredData: array,\n                    filterValue: items\n                }\n            })\n        }\n    }\n\n    findItem = (text) => {\n        this.setState(({todoData}) => {\n            const newArray = todoData.filter((el) => el.label.toLowerCase().includes(text.toLowerCase()))\n            return {\n                filteredData: newArray\n            }\n        })\n    }\n\n    render() {\n        const {todoData, filteredData, filterValue} = this.state;\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todoApp\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n                <div className=\"topPanel d-flex\">\n                    <SearchPannel onFind={this.findItem}/>\n                    <ItemStatusFilter onClick={this.filterItems} filter={filterValue}/>\n                </div>\n                <TodoList\n                    todos={filteredData}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n                <ItemAddForm\n                    onAddItem={this.addItem}\n                />\n            </div>\n        );\n    }\n\n}","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from \"./components/App/App\";\n\n\n\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}